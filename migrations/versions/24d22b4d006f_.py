"""empty message

Revision ID: 24d22b4d006f
Revises: 
Create Date: 2019-10-17 16:00:30.292432

"""
from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision = '24d22b4d006f'
down_revision = None
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('user',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('username', sa.String(length=80), nullable=False),
    sa.Column('email', sa.String(length=120), nullable=False),
    sa.Column('phone', sa.String(length=120), nullable=False),
    sa.Column('password_hash', sa.String(length=128), nullable=True),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('email'),
    sa.UniqueConstraint('phone'),
    sa.UniqueConstraint('username')
    )
    op.create_table('listing',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('ListingScore', sa.Integer(), nullable=True),
    sa.Column('ListingState', sa.Integer(), server_default='Open', nullable=True),
    sa.Column('ListingName', sa.String(length=80), nullable=False),
    sa.Column('ListingPrice', sa.Numeric(), nullable=False),
    sa.Column('ListingType', sa.String(length=80), nullable=False),
    sa.Column('ListingDescription', sa.String(length=80), nullable=False),
    sa.Column('ListingTimeStamp', sa.DateTime(), nullable=False),
    sa.Column('userId', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['userId'], ['user.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('order',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('OrderUser', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['OrderUser'], ['user.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('CPU',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('manufacturer', sa.String(length=80), nullable=False),
    sa.Column('TDP', sa.Numeric(), nullable=True),
    sa.Column('CoreCount', sa.Numeric(), nullable=True),
    sa.Column('CoreClock', sa.Numeric(), nullable=True),
    sa.Column('BoostClock', sa.Numeric(), nullable=True),
    sa.Column('Series', sa.String(length=80), nullable=True),
    sa.Column('Microarchitecture', sa.String(length=80), nullable=True),
    sa.Column('Socket', sa.String(length=80), nullable=True),
    sa.Column('IntegratedGraphics', sa.String(length=80), nullable=True),
    sa.Column('IncludesCPUCooler', sa.String(length=80), nullable=True),
    sa.Column('CPUListing', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['CPUListing'], ['listing.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('GPU',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('manufacturer', sa.String(length=80), nullable=False),
    sa.Column('Chipset', sa.String(length=80), nullable=True),
    sa.Column('MemoryType', sa.String(length=80), nullable=True),
    sa.Column('CoreClock', sa.Numeric(), nullable=True),
    sa.Column('BoostClock', sa.Numeric(), nullable=True),
    sa.Column('colour', sa.String(length=80), nullable=True),
    sa.Column('Length', sa.Integer(), nullable=True),
    sa.Column('TDP', sa.Numeric(), nullable=True),
    sa.Column('DVIPorts', sa.Integer(), nullable=True),
    sa.Column('HDMIPorts', sa.Integer(), nullable=True),
    sa.Column('MiniHDMIPorts', sa.Integer(), nullable=True),
    sa.Column('DisplayPortPorts', sa.Integer(), nullable=True),
    sa.Column('MiniDisplayPortPorts', sa.Integer(), nullable=True),
    sa.Column('CoolingType', sa.String(length=80), nullable=True),
    sa.Column('GPUListing', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['GPUListing'], ['listing.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('bids',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('bidAmount', sa.String(length=80), nullable=False),
    sa.Column('bidUser', sa.Integer(), nullable=True),
    sa.Column('bidListing', sa.Integer(), nullable=True),
    sa.Column('bidTimeStamp', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['bidListing'], ['listing.id'], ),
    sa.ForeignKeyConstraint(['bidUser'], ['user.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('case',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('manufacturer', sa.String(length=80), nullable=False),
    sa.Column('colour', sa.String(length=80), nullable=True),
    sa.Column('sidePanel', sa.String(length=80), nullable=True),
    sa.Column('internal25Bays', sa.Integer(), nullable=True),
    sa.Column('internal35Bays', sa.Integer(), nullable=True),
    sa.Column('caseListing', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['caseListing'], ['listing.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('cpu_cooler',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('manufacturer', sa.String(length=80), nullable=False),
    sa.Column('FanRPM', sa.String(length=80), nullable=True),
    sa.Column('NoiseLevel', sa.String(length=80), nullable=True),
    sa.Column('Height', sa.Integer(), nullable=True),
    sa.Column('WaterCooled', sa.String(length=80), nullable=True),
    sa.Column('Socket', sa.String(length=80), nullable=True),
    sa.Column('Fanless', sa.String(length=80), nullable=True),
    sa.Column('CPUCoolerListing', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['CPUCoolerListing'], ['listing.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('memory',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('manufacturer', sa.String(length=80), nullable=False),
    sa.Column('memoryType', sa.String(length=80), nullable=True),
    sa.Column('modules', sa.Integer(), nullable=True),
    sa.Column('colour', sa.String(length=80), nullable=True),
    sa.Column('speed', sa.Integer(), nullable=True),
    sa.Column('memoryListing', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['memoryListing'], ['listing.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('motherboard',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('manufacturer', sa.String(length=80), nullable=False),
    sa.Column('Socket', sa.String(length=80), nullable=True),
    sa.Column('RAMslots', sa.Integer(), nullable=False),
    sa.Column('MaxRAM', sa.Integer(), nullable=False),
    sa.Column('colour', sa.String(length=80), nullable=True),
    sa.Column('Chipset', sa.String(length=80), nullable=True),
    sa.Column('MemoryType', sa.String(length=80), nullable=True),
    sa.Column('SLISupport', sa.String(length=80), nullable=True),
    sa.Column('CrossFireSupport', sa.String(length=80), nullable=True),
    sa.Column('PCIEx16Slots', sa.Integer(), nullable=False),
    sa.Column('PCIEx8Slots', sa.Integer(), nullable=False),
    sa.Column('PCIEx4Slots', sa.Integer(), nullable=False),
    sa.Column('PCIEx1Slots', sa.Integer(), nullable=False),
    sa.Column('PCISlots', sa.Integer(), nullable=False),
    sa.Column('SATAPorts', sa.Integer(), nullable=False),
    sa.Column('M2Slots', sa.Integer(), nullable=False),
    sa.Column('mSata', sa.Integer(), nullable=False),
    sa.Column('OnboardUSB3Headers', sa.String(length=80), nullable=True),
    sa.Column('OnboardWifi', sa.String(length=80), nullable=True),
    sa.Column('RAIDSupport', sa.String(length=80), nullable=True),
    sa.Column('MotherboardListing', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['MotherboardListing'], ['listing.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('power_supply',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('manufacturer', sa.String(length=80), nullable=False),
    sa.Column('EffiencyRating', sa.String(length=80), nullable=True),
    sa.Column('Wattage', sa.Integer(), nullable=True),
    sa.Column('Modular', sa.String(length=20), nullable=True),
    sa.Column('SATAConnectors', sa.Integer(), nullable=True),
    sa.Column('PowerSupplyListing', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['PowerSupplyListing'], ['listing.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('sales',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('ListingID', sa.Integer(), nullable=True),
    sa.Column('BuyerID', sa.Integer(), nullable=True),
    sa.Column('SalePrice', sa.Numeric(), nullable=False),
    sa.ForeignKeyConstraint(['BuyerID'], ['user.id'], ),
    sa.ForeignKeyConstraint(['ListingID'], ['listing.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table('sales')
    op.drop_table('power_supply')
    op.drop_table('motherboard')
    op.drop_table('memory')
    op.drop_table('cpu_cooler')
    op.drop_table('case')
    op.drop_table('bids')
    op.drop_table('GPU')
    op.drop_table('CPU')
    op.drop_table('order')
    op.drop_table('listing')
    op.drop_table('user')
    # ### end Alembic commands ###
